% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/url_palette.R
\name{url_palette}
\alias{url_palette}
\title{Extracts a color palette from a image by url}
\usage{
url_palette(url, n_clusters = 1, rm_color = c("greyscale"))
}
\arguments{
\item{url}{A character string of the url with the png.}

\item{n_clusters}{number of clusters. Defaults to 1.}

\item{rm_color}{removes certain kinds of colors. Must be one of
"greyscale", "white" or "black".}
}
\value{
A color palette as a string.
}
\description{
Main utility of this function is to extract the color palette used in a
chart online.
}
\details{
This function takes lets you skip the trouble it takes for you to
download a image to disk before running a clustering algorithm on it. It
defaults to 1 cluster to avoid errors.

The rm_color will remove most unwanted colors when extracting color palettes
from charts, namely all greyscale colors. This is to ensure that neither
black or white will one of the color in the final palettes. To only remove
black or white set the argument to "black" or "white" respectively. Set to
any other value to avoid removing pixels.

A variation of the Partitioning Around Medoids (PAM) clustering method is
used in this application to ensure that each of the resulting colors
appears in the original image which is something that is not guaranteed
using standard k-means. This is particular helpfull since most charts only
have a handfull of different colors in them.
}
\examples{
text1 <- "3b59988b9dc3dfe3eef7f7f7ffffff"
text2 <- "the palatte is #3472bc, #345682 then #112233 and finally #cbac43"

# Returns vector when input is of length 1
regex_palette(text1)
regex_palette(text2)

text3 <- c("3b59988b9dc3dfe3eef7f7f7ffffff", "3b59988b9dc3dfe3eef7f7f7ffffff")

regex_palette(text3)
}
